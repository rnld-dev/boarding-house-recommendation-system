shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(DT)
detach("package:DT", unload = TRUE)
library(DT)
remotes::install_github("rstudio/htmltools")
shiny::runApp()
shiny::runApp()
# Tambahkan kolom warna berdasarkan cluster
df <- df %>% mutate(color = ifelse(cluster == 1, "#d03f2c", "#004af9"))
df <- readRDS("production.rds")
df
colnames(df)
library(leaflet)
library(dplyr)
# Tambahkan kolom warna berdasarkan cluster
df <- df %>% mutate(color = ifelse(cluster == 1, "#d03f2c", "#004af9"))
df
# Lokasi UPN
upn_lat <- -7.3327844081176625
upn_lng <- 112.7886245733404
# Buat peta interaktif
leaflet(df) %>%
addTiles() %>%
setView(lng = upn_lng, lat = upn_lat, zoom = 13.23) %>%  # Atur lokasi dan zoom awal
addCircleMarkers(
~Longitude, ~Latitude,
color = ~color,
fillColor = ~color,
popup = ~paste(
Nama, "<br><br>",
"<b>Jenis Kos:</b>", Jenis, "<br>",
"<b>Lokasi:</b>", Lokasi, "<br>",
"<b>Harga:</b>", Harga, "<br>",
"<b>Luas Kamar:</b>", Luas.Kamar, "<br>",
"<b>Jarak ke UPN:</b>", format(round(UPN, 2), nsmall = 2), "km<br>",
"<b>Listrik:</b>", Listrik, "<br>",
"<b>Kamar Mandi Dalam:</b>", K.Mandi.Dalam, "<br>",
"<b>AC:</b>", AC, "<br>",
"<a href='", Link, "' target='_blank' style='color:blue; text-decoration:underline;'>Klik untuk melihat</a>"
),
radius = 6,           # Tetapkan radius tetap untuk semua lingkaran
fillOpacity = 0.3,    # Transparansi isi lingkaran
opacity = 1,          # Transparansi batas lingkaran
stroke = TRUE,        # Aktifkan batas lingkaran
weight = 1,           # Ketebalan batas lingkaran
label = ~Nama,
labelOptions = labelOptions(
noHide = FALSE,
direction = 'auto'
)
) %>%
addCircleMarkers(
lng = upn_lng, lat = upn_lat,
color = "black",          # Warna batas lingkaran UPN
fillColor = "#e5dec9",      # Warna isi lingkaran UPN
radius = 8,            # Ukuran radius lingkaran UPN
fillOpacity = 2,        # Transparansi isi lingkaran UPN
opacity = 0.8,            # Transparansi batas lingkaran UPN
stroke = TRUE,          # Aktifkan batas lingkaran UPN
label = "UPN",
popup = "Universitas Pembangunan Nasional",
labelOptions = labelOptions(
noHide = TRUE,
direction = 'auto'
)
) %>%
addLegend(
"bottomright",
colors = c("#d03f2c", "#004af9"),
labels = c("Kos Standar", "Kos Eksklusif"),
title = "Klaster"
)
shiny::runApp()
df <- readRDS("production.rds")
df
library(leaflet)
library(dplyr)
library(leaflet)
library(dplyr)
# Tambahkan kolom warna berdasarkan cluster
df <- df %>% mutate(color = ifelse(cluster == 1, "#d03f2c", "#004af9"))
head(df)
# Tambahkan kolom warna berdasarkan cluster
df_withcolor <- df %>% mutate(color = ifelse(cluster == 1, "#d03f2c", "#004af9"))
head(df_withcolor)
saveRDS(production, "production_withcolor.rds")
saveRDS(df_withcolor, "production_withcolor.rds")
shiny::runApp()
shiny::runApp()
df <- readRDS("production.rds")
head(df)
# Total Kos
total_kos <- nrow(df)
total_kos
dekatupn <- df["UPN"]<3
dekatupn <- df["UPN"]<3
dekatupn
dekatupn <- df[df["UPN"]<3,]
dekatupn
dekatupn <- df[df["cluster"]=="2",]
dekatupn
ekslusif <- df[df["cluster"]=="2",]
kos_ekslusif = nrow(ekslusif)/total_kos
kos_ekslusif
ekslusif <- df[df["cluster"]=="2",]
kos_ekslusif = (nrow(ekslusif)/total_kos)*100
kos_ekslusif
ekslusif <- df[df["cluster"]=="2",]
kos_ekslusif = round(((nrow(ekslusif)/total_kos)*100, 2)
ekslusif <- df[df["cluster"]=="2",]
kos_ekslusif = round(((nrow(ekslusif)/total_kos)*100), 2)
kos_ekslusif
ekslusif <- df[df["cluster"]=="2",]
kos_ekslusif = round(((nrow(ekslusif)/total_kos)*100))
kos_ekslusif
# Median Harga Sewa Bulanan
median(df$Harga)
# Median Harga Sewa Bulanan
average(df$Harga)
# Median Harga Sewa Bulanan
avg(df$Harga)
# Median Harga Sewa Bulanan
summary(df$Harga)
# Median Harga Sewa Bulanan
median_harga <- median(df$Harga)
median_harga
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='carikos',
token='2DE747CFF999F4910D7FD51961F77215',
secret='U3XTSqD2+YQ8kF5Xgi63xF0rV0GSoxL6L75XHTjN')
install.packages("terra")
install.packages("raster")
shiny::runApp()
